(function() {
    "use strict";
    angular.module("app.core.services", [ "ngResource" ]);
    angular.module("app.core.filters", []);
    angular.module("app.core.attributes", []);
    angular.module("app.core.elements", [ "app.core.services" ]);
    angular.module("app.core.controllers", [ "app.yuidoc.services", "ngSanitize" ]);
    angular.module("app.core", [ "app.core.services", "app.core.filters", "app.core.attributes", "app.core.elements", "app.core.controllers" ]);
})();

(function() {
    "use strict";
    var filters = angular.module("app.core.filters");
    filters.filter("idEncode", function() {
        return function(inValue) {
            if (inValue === undefined || inValue.length === 0) {
                return inValue;
            } else {
                return inValue.replace(/[$]/g, "dollar_");
            }
        };
    });
    filters.filter("objectFilter", function() {
        return function(items, filter) {
            if (!filter) {
                return items;
            }
            var result = {};
            angular.forEach(filter, function(filterVal, filterKey) {
                angular.forEach(items, function(item, key) {
                    var fieldVal = item[filterKey];
                    if (fieldVal && fieldVal.toLowerCase().indexOf(filterVal.toLowerCase()) > -1) {
                        result[key] = item;
                    }
                });
            });
            return result;
        };
    });
})();

(function() {
    "use strict";
    var controllers = angular.module("app.core.controllers");
    controllers.controller("appController", function appController($scope, yuidocDataService) {
        $scope.resolved = false;
        yuidocDataService.load().then(function() {
            $scope.resolved = true;
            $scope.project = yuidocDataService.getProject();
            $scope.modules = yuidocDataService.getModules();
            $scope.classes = yuidocDataService.getClasses();
            $scope.classItems = yuidocDataService.getClassItems();
            $scope.globalClasses = yuidocDataService.getGlobalClasses();
            $scope.getClassesByModuleName = yuidocDataService.getClassesByModuleName.bind(yuidocDataService);
            $scope.getClassItemsByModuleAndClassName = yuidocDataService.getClassItemsByModuleAndClassName.bind(yuidocDataService);
        });
    });
})();

(function() {
    "use strict";
    var services = angular.module("app.core.services");
    services.service("iconSidebarService", function() {
        return {
            closeOpenSidebars: function() {
                $(".docMain").removeClass("sidebarActive");
                $(".popoverSidebar").removeClass("in");
                $(".iconSidebar .btn-pill").removeClass("active");
            },
            openSidebar: function(iconLiElement) {
                var sidebarId = iconLiElement.getAttribute("data-target");
                $(sidebarId).addClass("in");
                $(".docMain").addClass("sidebarActive");
                iconLiElement.classList.add("active");
            },
            closeSidebar: function(iconLiElement) {
                var sidebarId = iconLiElement.getAttribute("data-target");
                document.querySelector(sidebarId).classList.remove("in");
                document.querySelector(".docMain").classList.remove("sidebarActive");
                iconLiElement.classList.remove("active");
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.core.elements");
    module.directive("appHeader", function() {
        return {
            restrict: "E",
            replace: true,
            templateUrl: "app/core/elements/app-header/app-header-template.html",
            scope: {
                project: "="
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.core.elements");
    module.directive("iconSidebar", function(iconSidebarService) {
        return {
            restrict: "E",
            templateUrl: "app/core/elements/icon-sidebar/icon-sidebar-template.html",
            scope: {},
            link: function($scope, element, attrs) {
                function onSidebarClick(event) {
                    if (event.currentTarget.classList.contains("active")) {
                        iconSidebarService.closeSidebar(event.currentTarget);
                    } else {
                        iconSidebarService.closeOpenSidebars();
                        iconSidebarService.openSidebar(event.currentTarget);
                    }
                }
                (function setupPopovers() {
                    var bsPopoverOpts = {
                        delay: {
                            show: 1,
                            hide: 1
                        },
                        trigger: "hover",
                        viewport: "body",
                        container: "body"
                    };
                    $(".iconSidebar .btn-pill").popover(bsPopoverOpts).click(onSidebarClick);
                })();
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.core.elements");
    module.directive("treeSidebar", function() {
        return {
            restrict: "E",
            templateUrl: "app/core/elements/tree-sidebar/tree-sidebar-template.html",
            transclude: true,
            scope: {
                drawerWidth: "=?",
                responsiveWidth: "=?"
            },
            link: function($scope, element, attrs) {
                element[0].onlyMe = function() {
                    console.log("test");
                };
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.core.elements");
    module.directive("tree", function() {
        return {
            restrict: "E",
            replace: true,
            transclude: true,
            template: '<div class="tree" ng-transclude></div>'
        };
    });
    module.directive("treeList", function() {
        return {
            restrict: "E",
            replace: true,
            transclude: true,
            template: '<ul class="tl" role="menu" ng-transclude></ul>'
        };
    });
    module.directive("treeNode", function() {
        return {
            restrict: "E",
            replace: true,
            transclude: true,
            template: '<li class="tn" role="listitem" ng-transclude></li>'
        };
    });
    module.directive("treeItem", function() {
        return {
            restrict: "E",
            replace: true,
            transclude: true,
            template: '<a class="ti ti-{{skin}}" role="link" ng-transclude></a>',
            scope: {
                skin: "@"
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.core.attributes");
    module.directive("scrollTo", function() {
        return {
            restrict: "A",
            link: function(scope, element, attrs) {
                element.bind("click", function(event) {
                    var scrollToSelector, scrollToOffset = 0, preventDefault = false, $scrollToSelector, beforeScrollTo, afterScrollTo, scrollToTop, currentTop, duration;
                    if (attrs.href !== undefined && attrs.href !== "") {
                        preventDefault = true;
                        scrollToSelector = attrs.href;
                    } else {
                        scrollToSelector = attrs.scrollTo;
                    }
                    attrs.scrollToOffset = attrs.scrollToOffset || $("body").attr("scroll-to-offset");
                    if (attrs.scrollToOffset !== undefined && attrs.scrollToOffset !== "") {
                        scrollToOffset = attrs.scrollToOffset;
                    }
                    if (scrollToSelector === undefined || scrollToSelector === "") {
                        return;
                    }
                    $scrollToSelector = $(scrollToSelector);
                    if ($scrollToSelector.length === 0) {
                        throw new Error("scrollTo directive: " + scrollToSelector + " does not exist.");
                    }
                    beforeScrollTo = $("[before-scroll-to]", $scrollToSelector);
                    afterScrollTo = $("[after-scroll-to]", $scrollToSelector);
                    scrollToTop = $scrollToSelector.offset().top;
                    currentTop = $("header").offset().top;
                    duration = currentTop !== scrollToTop - scrollToOffset ? 1e3 : 0;
                    $("html, body").stop().animate({
                        scrollTop: scrollToTop - scrollToOffset
                    }, {
                        duration: duration,
                        easing: "easeInOutExpo",
                        start: function() {
                            var index, $element;
                            for (index = 0; index < afterScrollTo.length; index++) {
                                $element = $(afterScrollTo[index]);
                                $element.removeClass($element.attr("after-scroll-to"));
                            }
                            for (index = 0; index < beforeScrollTo.length; index++) {
                                $element = $(beforeScrollTo[index]);
                                $element.addClass($element.attr("before-scroll-to"));
                            }
                        },
                        complete: function() {
                            var index, $element;
                            for (index = 0; index < beforeScrollTo.length; index++) {
                                $element = $(beforeScrollTo[index]);
                                $element.removeClass($element.attr("before-scroll-to"));
                            }
                            for (index = 0; index < afterScrollTo.length; index++) {
                                $element = $(afterScrollTo[index]);
                                $element.addClass($element.attr("after-scroll-to"));
                            }
                        }
                    });
                    if (preventDefault === true) {
                        event.preventDefault();
                    }
                });
            }
        };
    });
})();

(function() {
    "use strict";
    angular.module("app.yuidoc.services", [ "ngResource" ]);
    angular.module("app.yuidoc.elements", [ "ngSanitize", "app.yuidoc.services" ]);
    angular.module("app.yuidoc", [ "app.yuidoc.services", "app.yuidoc.elements" ]);
})();

(function() {
    "use strict";
    var services = angular.module("app.yuidoc.services");
    services.service("yuidocDataService", function($resource, querifySync, yuidocDataPath) {
        function YuidocDataService() {
            this.dataset_ = null;
            this.loaded = false;
        }
        YuidocDataService.prototype = {
            load: function() {
                var paramDefaults = {};
                var actions = {
                    cache: true
                };
                var this_ = this;
                return $resource(yuidocDataPath, paramDefaults, actions).get().$promise.then(function(dataset) {
                    this_.loaded = true;
                    this_.dataset_ = dataset;
                });
            },
            get dataset() {
                if (this.dataset_ === null) {
                    throw Error("YuidocDataService: dataset is not loaded.");
                }
                return this.dataset_;
            },
            getProject: function() {
                return this.dataset.project;
            },
            getModules: function() {
                return this.dataset.modules;
            },
            getClasses: function() {
                return this.dataset.classes;
            },
            getClassItems: function() {
                return this.dataset.classitems;
            },
            getGlobalClasses: function() {
                var query = {
                    $not: {
                        $has: "module"
                    }
                };
                return querifySync.extract(this.dataset.classes, query);
            },
            getClassesByModuleName: function(moduleName) {
                var query = {
                    module: moduleName
                };
                return querifySync.extract(this.dataset.classes, query);
            },
            getClassItemsByModuleAndClassName: function(moduleName, className) {
                var query = {
                    module: moduleName,
                    "class": className
                };
                return querifySync.filter(this.dataset.classitems, query);
            }
        };
        return new YuidocDataService();
    });
})();

(function() {
    var module = angular.module("app.yuidoc.elements");
    module.directive("classItem", function($sce, marked) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/class-item/templates/class-item-template.html",
            scope: {
                module: "=",
                "class": "=",
                classItem: "="
            },
            link: function($scope) {
                var classItem = $scope.classItem;
                if (classItem.description) {
                    classItem.description = $sce.trustAsHtml(marked(classItem.description));
                }
                if (classItem.example) {
                    for (var index = 0; index < classItem.example.length; index++) {
                        classItem.example[index] = $sce.trustAsHtml(marked(classItem.example[index]));
                    }
                }
            }
        };
    });
    module.directive("classItemAttribute", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/class-item/templates/attribute-template.html",
            scope: {
                classItem: "="
            }
        };
    });
    module.directive("classItemMethod", function($sce, marked) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/class-item/templates/method-template.html",
            scope: {
                classItem: "="
            },
            link: function($scope) {
                if ($scope.classItem.return && $scope.classItem.return.description) {
                    $scope.classItem.return.description = $sce.trustAsHtml(marked($scope.classItem.return.description));
                }
            }
        };
    });
    module.directive("classItemParams", function($sce, marked) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/class-item/templates/params-template.html",
            replace: false,
            scope: {
                classItem: "="
            },
            link: function($scope) {
                var classItem = $scope.classItem;
                if (classItem.params) {
                    for (var index = 0; index < classItem.params.length; index++) {
                        var param = classItem.params[index];
                        param.description = $sce.trustAsHtml(marked(param.description));
                    }
                }
            }
        };
    });
    module.directive("classItemProps", function($sce, marked) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/class-item/templates/props-template.html",
            replace: false,
            scope: {
                classItem: "="
            },
            link: function($scope) {
                var classItem = $scope.classItem;
                if (classItem.props) {
                    for (var index = 0; index < classItem.props.length; index++) {
                        var prop = classItem.props[index];
                        prop.description = $sce.trustAsHtml(marked(prop.description));
                    }
                }
            }
        };
    });
    module.directive("classItemProperty", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/class-item/templates/property-template.html",
            scope: {
                classItem: "="
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.yuidoc.elements");
    module.directive("class", function($sce, marked, yuidocDataService) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/class/class-template.html",
            scope: {
                module: "=",
                "class": "="
            },
            link: function($scope) {
                $scope.getClassItemsByModuleAndClassName = function(moduleName, className) {
                    return yuidocDataService.getClassItemsByModuleAndClassName(moduleName, className);
                };
                var $class = $scope.class;
                if ($class.description) {
                    $class.description = $sce.trustAsHtml(marked($class.description));
                }
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.yuidoc.elements");
    module.directive("filterAllSidebar", function($sce, yuidocDataService) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/filter-sidebars/templates/filter-all-sidebar-template.html",
            scope: {
                modules: "=",
                globalClasses: "="
            },
            link: function($scope) {
                $scope.getClassesByModuleName = function(moduleName) {
                    return yuidocDataService.getClassesByModuleName(moduleName);
                };
                $scope.getClassItemsByModuleAndClassName = function(moduleName, className) {
                    return yuidocDataService.getClassItemsByModuleAndClassName(moduleName, className);
                };
                $scope.filterText = "";
            }
        };
    });
    module.directive("filterClassesSidebar", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/filter-sidebars/templates/filter-classes-sidebar-template.html",
            scope: {
                classes: "="
            },
            link: function($scope, $element, $attrs) {
                $scope.filterText = "";
            }
        };
    });
    module.directive("filterModulesSidebar", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/filter-sidebars/templates/filter-modules-sidebar-template.html",
            scope: {
                modules: "="
            },
            link: function($scope, $element, $attrs) {
                $scope.filterText = "";
            }
        };
    });
    module.directive("filterMethodsSidebar", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/filter-sidebars/templates/filter-methods-sidebar-template.html",
            scope: {
                classItems: "="
            },
            link: function($scope, $element, $attrs) {
                $scope.filterText = "";
            }
        };
    });
    module.directive("filterPropertiesSidebar", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/filter-sidebars/templates/filter-properties-sidebar-template.html",
            scope: {
                classItems: "="
            },
            link: function($scope, $element, $attrs) {
                $scope.filterText = "";
            }
        };
    });
    module.directive("classItemsList", function(yuidocDataService) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/filter-sidebars/templates/class-items-list-template.html",
            replace: true,
            scope: {
                module: "=",
                className: "=",
                filterText: "="
            },
            link: function($scope) {
                $scope.getClassItemsByModuleAndClassName = function(moduleName, className) {
                    return yuidocDataService.getClassItemsByModuleAndClassName(moduleName, className);
                };
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.yuidoc.elements");
    module.directive("globalClasses", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/global-classes/global-classes-template.html",
            scope: {
                globalClasses: "="
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.yuidoc.elements");
    module.directive("moduleList", function() {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/module-list/module-list-template.html",
            scope: {
                modules: "="
            }
        };
    });
})();

(function() {
    "use strict";
    var module = angular.module("app.yuidoc.elements");
    module.directive("module", function($sce, marked, yuidocDataService) {
        return {
            restrict: "E",
            templateUrl: "app/yuidoc/elements/module/module-template.html",
            scope: {
                module: "="
            },
            link: function($scope) {
                $scope.getClassesByModuleName = function(moduleName) {
                    return yuidocDataService.getClassesByModuleName(moduleName);
                };
                var module = $scope.module;
                if (module.description) {
                    module.description = $sce.trustAsHtml(marked(module.description));
                }
            }
        };
    });
})();

(function() {
    "use strict";
    var app = angular.module("app", [ "app.core", "app.yuidoc" ]);
    marked.setOptions({
        highlight: function(code) {
            return hljs.highlightAuto(code).value;
        }
    });
    app.constant("marked", window.marked);
    app.constant("hljs", window.hljs);
    app.constant("yuidocDataPath", "dist/doc/data.json");
    app.constant("querifySync", querify.sync);
})();
//# sourceMappingURL=yuidoc-theme-dyno.min.js.map